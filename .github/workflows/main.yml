name: CI/CD Compose Multiplatform

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-android:
    name: Build & Test Android
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      # 3. Grant execute permission for gradlew
      - name: Grant execute permissions for gradlew
        run: chmod +x gradlew

      # 4. KtLint Check
      - name: Run KtLint Check
        run: ./gradlew ktlintCheck

      # 5. Run Unit Tests
      - name: Run Unit Tests
        run: ./gradlew clean testDebug

      # 6. Build Project(Android)
      - name: Build Project
        run: ./gradlew build

      # 7. Generate Debug APK
      - name: Generate Debug APK
        run: ./gradlew assembleDebug --stacktrace

      # 8. Upload Debug APK
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: composeApp/build/outputs/apk/debug/app-debug.apk

  build-ios:
    name: Build iOS Framework
    runs-on: macos-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Java
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Install Xcode Command Line Tools
      - name: Install Xcode Command Line Tools
        run: |
          xcode-select --install || echo "Xcode Command Line Tools already installed."

      # 4. Grant execute permission for gradlew
      - name: Grant execute permissions for gradlew
        run: chmod +x gradlew

      # 5. Build iOS Framework
      - name: Build iOS Framework
        run: ./gradlew iosX64Binaries

      # 6. Generate iOS Executable
      - name: Generate iOS Executable
        run: ./gradlew linkDebugExecutableIosArm64

      # 5. Upload iOS Framework
      - name: Upload iOS Framework
        uses: actions/upload-artifact@v4
        with:
          name: composeApp.kexe
          path: composeApp/build/bin/iosArm64/debugExecutable/composeApp.kexe

